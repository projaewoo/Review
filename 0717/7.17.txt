정수형 Literal
8진수 : 앞에 0붙임 //0234
16진수 : 앞에 0x붙임 //0xABCD
2진수 : 앞에 0b붙임 (binerly) //0b0001001 //출력형식 : 
24L 또는 24l = 8byte로 봄.

static은 공유변수
따라서 주소 필요없는데, 단지 어느 클래스에 속하는지 알려줘야함
Interger.toBinaryString, Long.toBinaryString

System.out.printf("%f\n", 0.567892E-05);
소수점 6자리 이하는 7자리에서 반올림.

%.18f\n
소수점 18자리 다 찍어

//////////

문자열에서 +는 연결연산자.
어느 한쪽이 문자열이면 다른 한쪽도 string으로 변환해서 붙여줌.
"부산시" + 123 = "부산시" + "123"으로 인식


그러나 string은 숫자로 안바뀜

출력형식 대입하려면 printf사용. & 출력창에 줄 맞춰서 여러 줄의 숫자 출력하고 싶을 때
출력형식 대입 안하려면 print 또는 println사용

%5d = 5칸짜리 정수
%05d = 5칸짜리 정수 칸 만들어서 빈칸에 0 넣어라
%-5d = 5칸 짜리 정수 칸 만들어서 왼쪽정렬.
%.2f = 소수점 2자리 실수
%7.2f = 전체 자리 수 7자리 중 소수점 2자리, 정수부 5자리.
%10s = 10자리 string
%5b = 5칸짜리 boolean

%#o = 출력할때, 8진수인걸 표시해서 출력.
System.out.printf("%#o\n", 24); = 030로 출력


///
변수
1. 선언 = 메모리 관리하는 OS에게 이 메모리 쓴다고 얘기함.
	데이터 타입 알아야함. -> 사이즈, 종류 결정해야함
		사이즈 : 예) 8평
		종류 : 예) 실수의 8평? 정수의 8평?
1. 선언
int age; = OS에게 선언하고 OS가 4Byte짜리 메모리를 할당해줌. 원래 그 메모리에 어떤 값이 있는지 모름(쓰레기값)
할당 안하면 쓰레기값 존재할 수 있음.

2. 할당
age = 24;
age 메모리에 24를 넣음.

3. 초기화(선언+할당)
int age = 24;

//
자바는 24라는 숫자를 4Byte로 봄.
short age = 24;	 short:2Byte인데 에러 안남.
24에서 0으로 구성된 앞의 2Byte짤라서 short에 들어감.

byte age = 128;
128이 1Byte밖으로 나가서 에러남.

short age = 32767 +1;
유효한 범위 오버해서 에러.

int su = 2147483647;
System.out.printf("%d", su + 1);
int의 범위에서 +1이 됐으므로 int의 -범위로 윤회.
따라서 결과값 -2147483648

중요!!
System.out.printf("%d", 변수);
System.out.printf("%d", 리터럴);
찍느냐에 따라 오류 또는 윤회!

short sum = 5 + 3;
못들어감 (+연산자쓰면 앞의 0으로된 바이트 못짤라서 못들어감)
short sum = 8;
들어감.

따라서 정수형의 범위값 외우는게 중요!!!!!


데이터 타입 : 기본형(primitive)(bulit-in같은 의미) : 
		수치형 : 정수형
			      문자형 char형(문자형)(무조건 양수 = unsigned) : 2Byte :  65가 'A'
			      정수형 byte or short or int or long 65를 65로 출력
				   1Byte    2Byte   4Byte  8Byte
			실수형
			    float형 : 4Byte
			    double형 : 8Byte
			Boolean형(양수 음수 개념 자체 x//나머지는 양수 음수 존재)(연산 불가 // 나머지는 연산 가능) : 실제로는 1bit이나 데이터 기본타입이 Byte라서 1Byte라고 함.

		위에 8개형 제외하고 나머지는 다 참조형
	     확장형(참조형 reference)(원룸에 입주해서 필요한 것들 더 추가하는 타입) : API문서에 student클래스 없음.
		따라서 참조형 = class(예) String같은 클래스) , interface, Enum(나열형) = 예) 과목들 나열할때 사용.	

		참조형 : 주소를 저장! <-> 기본형 : 값을 저장.


추상 : 	User-defined
	Abstraction = 예) 포유류(인간이 만든 개념)
	
		
